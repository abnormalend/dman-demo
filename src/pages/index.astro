---
import { getEntryBySlug } from 'astro:content';
// Load bio markdown content
const bioEntry = await getEntryBySlug('bio', 'about');
const bioImage = bioEntry?.data.image ?? '/images/diallo1.png';
const BioContent = bioEntry ? (await bioEntry.render()).Content : null;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <title>Homepage of Diallo Wallace</title>
  </head>
  <body>
    <main>
      <h1>Homepage of <span class="text-gradient">Diallo Wallace</span></h1>
      <p style="margin: 0.5rem 0 1.5rem;">
        <a href="/blog/" style="color: rgb(var(--accent)); text-decoration: none;">Read the blog →</a>
      </p>
      <section id="about" class="about">
        <div class="about-card">
          <img src={bioImage} alt="Headshot of Diallo Wallace" width="160" height="160" class="avatar" />
          <div>
            <h2>About Me</h2>
            <div id="bio" class="bio">
              {BioContent ? <BioContent /> : (<p>Bio coming soon…</p>)}
            </div>
          </div>
        </div>
      </section>
      <section id="gallery" class="gallery">
        <h2>Gallery</h2>
        <div class="gallery-grid">
          <a href="/images/diallo1.png" target="_blank" rel="noopener">
            <img src="/images/diallo1.png" alt="Diallo Wallace headshot 1" />
          </a>
          <a href="/images/diallo2.png" target="_blank" rel="noopener">
            <img src="/images/diallo2.png" alt="Diallo Wallace headshot 2" />
          </a>
          <a href="/images/diallo3.png" target="_blank" rel="noopener">
            <img src="/images/diallo3.png" alt="Diallo Wallace headshot 3" />
          </a>
        </div>
      </section>
    </main>
  </body>
</html>

<style>
  :root {
    /* Space-themed palette: cyan/teal accent on deep space blues */
    --accent: 102, 217, 255;        /* cyan */
    --accent-light: 178, 235, 242;  /* light cyan */
    --accent-dark: 8, 14, 36;       /* deep space blue */
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgba(var(--accent-light), 0.8) 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    /* Layered starfield: gradient nebula + sparse stars */
    background:
      radial-gradient(1200px 600px at 80% -10%, rgba(0, 180, 255, 0.10), transparent 60%),
      radial-gradient(1000px 800px at -10% 20%, rgba(120, 0, 255, 0.08), transparent 60%),
      radial-gradient(800px 800px at 50% 120%, rgba(0, 255, 170, 0.05), transparent 60%),
      #0b1020; /* base space color */
    /* tiny stars */
    background-image:
      radial-gradient(1px 1px at 10% 15%, rgba(255,255,255,0.85), rgba(255,255,255,0)),
      radial-gradient(1px 1px at 20% 30%, rgba(255,255,255,0.8), rgba(255,255,255,0)),
      radial-gradient(1px 1px at 30% 70%, rgba(255,255,255,0.75), rgba(255,255,255,0)),
      radial-gradient(1px 1px at 40% 50%, rgba(255,255,255,0.7), rgba(255,255,255,0)),
      radial-gradient(1px 1px at 55% 25%, rgba(255,255,255,0.65), rgba(255,255,255,0)),
      radial-gradient(1px 1px at 65% 80%, rgba(255,255,255,0.6), rgba(255,255,255,0)),
      radial-gradient(1px 1px at 75% 40%, rgba(255,255,255,0.6), rgba(255,255,255,0)),
      radial-gradient(1px 1px at 85% 60%, rgba(255,255,255,0.55), rgba(255,255,255,0)),
      radial-gradient(2px 2px at 15% 85%, rgba(255,255,255,0.45), rgba(255,255,255,0)),
      radial-gradient(2px 2px at 90% 20%, rgba(255,255,255,0.4), rgba(255,255,255,0));
    background-blend-mode: screen, screen, screen, normal;
    background-size: cover;
  }
  body {
    color: white;
    margin: 0;
  }
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    font-size: 20px;
    line-height: 1.6;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  
  .bio { line-height: 1.8; }
  .bio p { margin: 0.85rem 0; }
  .about {
    margin-top: 3rem;
  }
  .about-card {
    display: grid;
    grid-template-columns: 160px 1fr;
    gap: 1.25rem;
    align-items: start; /* top-align avatar with text */
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
  }
  .avatar {
    width: 160px;
    height: 160px;
    border-radius: 100%;
    object-fit: cover;
    box-shadow: 0 0 0 2px rgba(255,255,255,0.08);
  }
  @media (max-width: 640px) {
    .about-card { grid-template-columns: 1fr; text-align: center; }
    .avatar { margin: 0 auto; }
  }
  .gallery {
    margin-top: 2rem;
  }
  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: 1rem;
  }
  .gallery-grid img {
    width: 100%;
    height: 220px;
    object-fit: cover;
    border-radius: 8px;
    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.08);
    transition: transform 0.2s ease;
  }
  .gallery-grid a:hover img,
  .gallery-grid a:focus img {
    transform: scale(1.01);
  }
</style>
